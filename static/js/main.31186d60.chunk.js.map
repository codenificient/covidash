{"version":3,"sources":["Components/Country/Country.js","Components/CountryList/CountryList.js","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Country","stats","flagged","Map","set","formatNumber","num","toString","replace","query","get","name","countryCode","toLowerCase","className","src","alt","total","dead","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","csv","require","request","App","e","setState","searchField","target","value","state","response","countries","a","fromStream","responseJSON","this","parseInt","Confirmed","healthy","Recovered","Deaths","actives","ISO3","substring","Country_Region","prevState","concat","filteredCountries","filter","stat","includes","href","rel","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31186d60.chunk.js","sourcesContent":["import React from 'react'\nimport './country.css'\n\nconst Country = ({ stats }) => {\n\tconst flagged = new Map()\n\tflagged.set('Zimbabwe', 'zw')\n\tflagged.set('Zambia', 'zm')\n\tflagged.set('South Africa', 'za')\n\tflagged.set('Mayotte', 'yt')\n\tflagged.set('Yemen', 'YE')\n\tflagged.set('Samoa', 'ws')\n\tflagged.set('Wallist and Futura', 'wf')\n\tflagged.set('Vanuatu', 'VU')\n\tflagged.set('Vietnam', 'VN')\n\tflagged.set('Virgin Islands', 'VI')\n\tflagged.set('Venezuela', 'VE')\n\tflagged.set('Saint Vincent and the Grenadines', 'VC')\n\tflagged.set('Italy', 'IT')\n\tflagged.set('Bangladesh', 'BD')\n\tflagged.set('Jersey', 'JE')\n\tflagged.set('Iceland', 'IS')\n\tflagged.set('Israel', 'IL')\n\tflagged.set('Burundi', 'BI')\n\tflagged.set('Cabo Verde', 'CV')\n\tflagged.set('Congo (Kinshasa)', 'CD')\n\tflagged.set('Congo (Brazzaville)', 'CG')\n\tflagged.set('Comoros', 'KM')\n\tflagged.set('Colombia', 'CO')\n\tflagged.set('Canada', 'ca')\n\tflagged.set('Angola', 'AO')\n\tflagged.set('Algeria', 'dz')\n\tflagged.set('Antigua and Barbuda', 'AG')\n\tflagged.set('Argentina', 'AR')\n\tflagged.set('Armenia', 'AM')\n\tflagged.set('Australia', 'AU')\n\tflagged.set('Austria', 'at')\n\tflagged.set('Bahrain', 'BH')\n\tflagged.set('Bahamas', 'BS')\n\tflagged.set('Benin', 'BJ')\n\tflagged.set('Belgium', 'BE')\n\tflagged.set('Central African Republic', 'CF')\n\tflagged.set('Grenada', 'GD')\n\tflagged.set('Greece', 'GR')\n\tflagged.set('Ireland', 'IE')\n\tflagged.set('Iraq', 'IQ')\n\tflagged.set('Iran', 'IR')\n\tflagged.set('Jamaica', 'JM')\n\tflagged.set('Mali', 'ML')\n\tflagged.set('Malta', 'MT')\n\tflagged.set('Kazakhstan', 'KZ')\n\tflagged.set('Denmark', 'dk')\n\tflagged.set('Guinea', 'GN')\n\tflagged.set('Guinea-Bissau', 'GW')\n\tflagged.set('Equatorial Guinea', 'GQ')\n\tflagged.set('Poland', 'PL')\n\tflagged.set('Suriname', 'SR')\n\tflagged.set('Switzerland', 'CH')\n\tflagged.set('Sierra Leone', 'SL')\n\tflagged.set('Slovenia', 'SI')\n\tflagged.set('Slovakia', 'SK')\n\tflagged.set('Uruguay', 'UY')\n\tflagged.set('Ukraine', 'UA')\n\tflagged.set('Turkey', 'TR')\n\tflagged.set('Tunisia', 'TN')\n\tflagged.set('Sudan', 'SD')\n\tflagged.set('South Sudan', 'SS')\n\tflagged.set('Bosnia and Herzegovina', 'BA')\n\tflagged.set('Micronesia', 'MS')\n\tflagged.set('Isle of Man', 'IM')\n\tflagged.set('Korea, South', 'KR')\n\tflagged.set('Solomon Islands', 'SB')\n\tflagged.set('Sweden', 'SE')\n\tflagged.set('Serbia', 'RS')\n\tflagged.set('Brunei', 'BN')\n\tflagged.set('Belarus', 'BY')\n\tflagged.set('Belize', 'BZ')\n\tflagged.set('Barbados', 'BB')\n\tflagged.set('Andorra', 'ad')\n\tflagged.set('Summer Olympics 2020', 'CX')\n\tflagged.set('Eswatini', 'SZ')\n\tflagged.set('Diamond Princess', 'MF')\n\tflagged.set('Libya', 'LY')\n\tflagged.set('Liberia', 'LR')\n\tflagged.set('MS Zaandam', 'AH')\n\tflagged.set('West Bank and Gaza', 'cc')\n\n\tconst formatNumber = (num) => {\n\t\treturn num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ')\n\t}\n\n\t//   console.log(flagged);\n\tlet query = flagged.get(stats.name) || stats.countryCode\n\tquery = query.toLowerCase()\n\treturn (\n\t\t<div className=\"country\">\n\t\t\t<img src={`https://flagcdn.com/h120/${query}.png`} alt={`Flag of ${stats.name}`} />\n\t\t\t<h2>{stats.name}</h2>\n\t\t\t<div className=\"cases sb\">\n\t\t\t\t<p>\n\t\t\t\t\t{`Confirmed : `}\n\t\t\t\t\t<span className=\"qty\">{formatNumber(stats.total)}</span>\n\t\t\t\t</p>\n\t\t\t\t{/* <p>\n          {`Active : `}\n          <span className=\"qty\">{stats.actives}</span>\n        </p> */}\n\t\t\t\t<p>\n\t\t\t\t\t{`Deaths : `}\n\t\t\t\t\t<span className=\"qty\">{formatNumber(stats.dead)}</span>\n\t\t\t\t</p>\n\t\t\t\t{/* <p>\n          {`Recovered : `}\n          <span className=\"qty\">{stats.healthy}</span>\n        </p> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Country\n","import React from 'react';\nimport Country from '../Country/Country';\nimport './countryList.css';\n\nconst CountryList = ({ stats }) => {\n\treturn (\n\t\t<div className=\"showCountry\">\n\t\t\t{stats.map((country) => <Country key={country.name} stats={country} />)}\n\t\t</div>\n\t);\n};\n\nexport default CountryList;\n","import React from 'react';\nimport './searchbox.css';\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n\treturn (\n\t\t<div className=\"search-box\">\n\t\t\t<input type=\"search\" className=\"search\" placeholder={placeholder} onChange={handleChange} />\n\t\t</div>\n\t);\n};\n\nexport default SearchBox;\n","import React from 'react'\nimport './App.css'\nimport CountryList from './Components/CountryList/CountryList'\nimport SearchBox from './Components/SearchBox/SearchBox'\nconst csv = require('csvtojson')\nconst request = require('request')\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tstats: [],\n\t\t\tresponse: null,\n\t\t\tcountries: [],\n\t\t\tsearchField: ''\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst responseJSON = await csv().fromStream(\n\t\t\trequest.get('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv')\n\t\t)\n\n\t\t// console.log(responseJSON);\n\t\tthis.setState({\n\t\t\tcountries: responseJSON\n\t\t})\n\n\t\tthis.state.countries.map(async (country) => {\n\t\t\t// get the latest data about each country\n\t\t\tconst total = parseInt(country.Confirmed, 10)\n\t\t\tconst healthy = parseInt(country.Recovered, 10) ? parseInt(country.Recovered, 10) : 0\n\t\t\tconst dead = parseInt(country.Deaths, 10)\n\t\t\tconst actives = total - (dead + healthy)\n\t\t\tconst countryCode = country.ISO3.substring(0, 2)\n\t\t\t// console.log(actives);\n\n\t\t\t// the data is missing country name. make another request to fetch country name\n\t\t\tconst name = country.Country_Region\n\n\t\t\t// console.log(name);\n\t\t\t// console.log({ country });\n\t\t\tif (country)\n\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\tstats: prevState.stats.concat({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tcountryCode,\n\t\t\t\t\t\ttotal,\n\t\t\t\t\t\thealthy,\n\t\t\t\t\t\tdead,\n\t\t\t\t\t\tactives\n\t\t\t\t\t})\n\t\t\t\t}))\n\t\t})\n\t}\n\thandleChange = (e) => this.setState({ searchField: e.target.value })\n\n\trender() {\n\t\tconst { searchField, stats } = this.state\n\t\tconst filteredCountries = stats.filter((stat) => stat.name.toLowerCase().includes(searchField.toLowerCase()))\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1 className=\"dashboard text-center\">Covid 2019 Dashboard</h1>\n\t\t\t\t<p className=\"text-beige text-center\">\n\t\t\t\t\tThis dashboard is powered by data from{' '}\n\t\t\t\t\t<a href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\tJohn Hopkins University\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tand flags from{' '}\n\t\t\t\t\t<a href=\"https://flagpedia.net\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\tFlagpedia.net\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"Search by country name..\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tclassName=\"search-box\"\n\t\t\t\t/>\n\n\t\t\t\t<CountryList stats={filteredCountries} />\n\n\t\t\t\t<div className=\"allproject text-center\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://tioye.dev/pages/projects/allproject.html\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tView my other projects\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}