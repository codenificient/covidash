{"version":3,"sources":["Components/Country/Country.js","Components/CountryList/CountryList.js","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Country","stats","flagged","Map","set","formatNumber","num","toString","replace","query","get","name","countryCode","className","src","alt","total","dead","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","csv","require","request","App","e","setState","searchField","target","value","state","response","countries","a","fromStream","responseJSON","console","log","this","parseInt","Confirmed","healthy","Recovered","Deaths","actives","ISO3","substring","Country_Region","prevState","concat","filteredCountries","filter","stat","toLowerCase","includes","href","rel","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08f486c5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./country.css\";\n\n\nconst Country = ({ stats }) => {\n\tconst flagged = new Map();\n  flagged.set(\"Zimbabwe\", \"ZW\");\n  flagged.set(\"Zambia\", \"ZM\");\n  flagged.set(\"South Africa\", \"ZA\");\n  flagged.set(\"Mayotte\", \"YT\");\n  flagged.set(\"Yemen\", \"YE\");\n  flagged.set(\"Samoa\", \"ws\");\n  flagged.set(\"Wallist and Futura\", \"wf\");\n  flagged.set(\"Vanuatu\", \"VU\");\n  flagged.set(\"Vietnam\", \"VN\");\n  flagged.set(\"Virgin Islands\", \"VI\");\n  flagged.set(\"Venezuela\", \"VE\");\n  flagged.set(\"Saint Vincent and the Grenadines\", \"VC\");\n  flagged.set(\"Italy\", \"IT\");\n  flagged.set(\"Bangladesh\", \"BD\");\n  flagged.set(\"Jersey\", \"JE\");\n  flagged.set(\"Iceland\", \"IS\");\n  flagged.set(\"Israel\", \"IL\");\n  flagged.set(\"Burundi\", \"BI\");\n  flagged.set(\"Cabo Verde\", \"CV\");\n  flagged.set(\"Congo (Kinshasa)\", \"CD\");\n  flagged.set(\"Congo (Brazzaville)\", \"CG\");\n  flagged.set(\"Comoros\", \"KM\");\n  flagged.set(\"Colombia\", \"CO\");\n  flagged.set(\"Canada\", \"ca\");\n  flagged.set(\"Angola\", \"AO\");\n  flagged.set(\"Algeria\", \"dz\");\n  flagged.set(\"Antigua and Barbuda\", \"AG\");\n  flagged.set(\"Argentina\", \"AR\");\n  flagged.set(\"Armenia\", \"AM\");\n  flagged.set(\"Australia\", \"AU\");\n  flagged.set(\"Austria\", \"at\");\n  flagged.set(\"Bahrain\", \"BH\");\n  flagged.set(\"Bahamas\", \"BS\");\n  flagged.set(\"Benin\", \"BJ\");\n  flagged.set(\"Belgium\", \"BE\");\n  flagged.set(\"Central African Republic\", \"CF\");\n  flagged.set(\"Grenada\", \"GD\");\n  flagged.set(\"Greece\", \"GR\");\n  flagged.set(\"Ireland\", \"IE\");\n  flagged.set(\"Iraq\", \"IQ\");\n  flagged.set(\"Iran\", \"IR\");\n  flagged.set(\"Jamaica\", \"JM\");\n  flagged.set(\"Mali\", \"ML\");\n  flagged.set(\"Malta\", \"MT\");\n  flagged.set(\"Kazakhstan\", \"KZ\");\n  flagged.set(\"Denmark\", \"dk\");\n  flagged.set(\"Guinea\", \"GN\");\n  flagged.set(\"Guinea-Bissau\", \"GW\");\n  flagged.set(\"Equatorial Guinea\", \"GQ\");\n  flagged.set(\"Poland\", \"PL\");\n  flagged.set(\"Suriname\", \"SR\");\n  flagged.set(\"Switzerland\", \"CH\");\n  flagged.set(\"Sierra Leone\", \"SL\");\n  flagged.set(\"Slovenia\", \"SI\");\n  flagged.set(\"Slovakia\", \"SK\");\n  flagged.set(\"Uruguay\", \"UY\");\n  flagged.set(\"Ukraine\", \"UA\");\n  flagged.set(\"Turkey\", \"TR\");\n  flagged.set(\"Tunisia\", \"TN\");\n  flagged.set(\"Sudan\", \"SD\");\n  flagged.set(\"South Sudan\", \"SS\");\n  flagged.set(\"Bosnia and Herzegovina\", \"BA\");\n  flagged.set(\"Micronesia\", \"MS\");\n  flagged.set(\"Isle of Man\", \"IM\");\n  flagged.set(\"Korea, South\", \"KR\");\n  flagged.set(\"Solomon Islands\", \"SB\");\n  flagged.set(\"Sweden\", \"SE\");\n  flagged.set(\"Serbia\", \"RS\");\n  flagged.set(\"Brunei\", \"BN\");\n  flagged.set(\"Belarus\", \"BY\");\n  flagged.set(\"Belize\", \"BZ\");\n  flagged.set(\"Barbados\", \"BB\");\n  flagged.set(\"Andorra\", \"AD\");\n  flagged.set(\"Summer Olympics 2020\", \"CX\");\n  flagged.set(\"Eswatini\", \"SZ\");\n  flagged.set(\"Diamond Princess\", \"MF\");\n  flagged.set(\"Libya\", \"LY\");\n  flagged.set(\"Liberia\", \"LR\");\n  flagged.set(\"MS Zaandam\", \"AH\");\n  flagged.set(\"West Bank and Gaza\", \"cc\");\n\n  const formatNumber = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ')\n}\n\n//   console.log(flagged);\nconst query = flagged.get(stats.name) || stats.countryCode\n  return (\n    <div className=\"country\">\n      <img\n        src={`https://www.countryflags.io/${query}/flat/64.png`}\n        alt={`Flag of ${stats.name}`}\n      />\n      <h2>{stats.name}</h2>\n      <div className=\"cases sb\">\n        <p>\n          {`Confirmed : `}\n          <span className=\"qty\">{formatNumber(stats.total)}</span>\n        </p>\n        {/* <p>\n          {`Active : `}\n          <span className=\"qty\">{stats.actives}</span>\n        </p> */}\n        <p>\n          {`Deaths : `}\n          <span className=\"qty\">{formatNumber(stats.dead)}</span>\n        </p>\n        {/* <p>\n          {`Recovered : `}\n          <span className=\"qty\">{stats.healthy}</span>\n        </p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Country;\n","import React from 'react';\nimport Country from '../Country/Country';\nimport './countryList.css';\n\nconst CountryList = ({ stats }) => {\n\treturn (\n\t\t<div className=\"showCountry\">\n\t\t\t{stats.map((country) => <Country key={country.name} stats={country} />)}\n\t\t</div>\n\t);\n};\n\nexport default CountryList;\n","import React from 'react';\nimport './searchbox.css';\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n\treturn (\n\t\t<div className=\"search-box\">\n\t\t\t<input type=\"search\" className=\"search\" placeholder={placeholder} onChange={handleChange} />\n\t\t</div>\n\t);\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./Components/CountryList/CountryList\";\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\nconst csv = require(\"csvtojson\");\nconst request = require(\"request\");\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      stats: [],\n      response: null,\n      countries: [],\n      searchField: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const responseJSON = await csv().fromStream(\n      request.get(\n        \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\"\n      )\n    );\n\n    console.log(responseJSON);\n    this.setState({\n      countries: responseJSON,\n    });\n\n    this.state.countries.map(async (country) => {\n      // get the latest data about each country\n      const total = parseInt(country.Confirmed, 10);\n      const healthy = parseInt(country.Recovered, 10)\n        ? parseInt(country.Recovered, 10)\n        : 0;\n      const dead = parseInt(country.Deaths, 10);\n      const actives = total - (dead + healthy);\n      const countryCode = country.ISO3.substring(0, 2);\n      // console.log(actives);\n\n      // the data is missing country name. make another request to fetch country name\n      const name = country.Country_Region;\n\n      // console.log(name);\n      // console.log({ country });\n      if (country)\n        this.setState((prevState) => ({\n          stats: prevState.stats.concat({\n            name,\n            countryCode,\n            total,\n            healthy,\n            dead,\n            actives,\n          }),\n        }));\n    });\n  }\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n\n  render() {\n    const { searchField, stats } = this.state;\n    const filteredCountries = stats.filter((stat) =>\n      stat.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1 className=\"dashboard text-center\">Covid 2019 Dashboard</h1>\n        <p className=\"text-beige text-center\">\n          This dashboard is powered by data from{\" \"}\n          <a\n            href=\"https://github.com/CSSEGISandData/COVID-19\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            John Hopkins University\n          </a>{\" \"}\n          and flags from{\" \"}\n          <a\n            href=\"https://www.countryflags.io\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Country Flags.io\n          </a>\n        </p>\n        <SearchBox\n          placeholder=\"Search by country name..\"\n          handleChange={this.handleChange}\n          className=\"search-box\"\n        />\n\n        <CountryList stats={filteredCountries} />\n\n        <div className=\"allproject text-center\">\n          <a\n            href=\"https://tioye.dev/pages/projects/allproject.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            View my other projects\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}